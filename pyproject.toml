[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "pyStrata"
dynamic = ["version"]
authors = [{ name = "Albert Kottke", email = "albert.kottke@gmail.com" }]
description = "Site response analysis with Python."
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
dependencies = [
    "matplotlib",
    "numba",
    "numpy",
    "pykooh",
    "pyrvt",
    "scipy",
    "setuptools",
    "tomli",
    "xarray",
]

[project.urls]
Homepage = "https://github.com/arkottke/pystrata"
Documentation = "https://pystrata.readthedocs.io"

[project.optional-dependencies]
test = [
    "numpy>=2.0",
    "coverage[toml]",
    "nbformat",
    "nbconvert",
    "pytest",
    "pytest-cov",
    "pytest-runner",
    "openpyxl",
    "matplotlib",
    "pykooh",
    "tomli",
    "pandas",
    "pyexcel",
]
style = [
    "black[colorama,jupyter]",
    "ruff",
]
docs = [
    "mkdocs",
    "markdown-callouts",
    "mkdocstrings[python]",
    "mkdocs-bibtex",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-material",
    "mkdocs-section-index",
    "mkdocs-jupyter",
    "black[colorama,jupyter]",
]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
exclude = ["docs"]
# Same as Black.
line-length = 88
indent-width = 4

target-version = "py310"

extend-include = ["*.ipynb"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = ["E", "F", "W", "Q", "I"]
ignore = ["E203"]

# uv configuration for development dependencies
[tool.uv]
dev-dependencies = [
    # Build tools
    "setuptools-scm>=8",
    # Testing
    "pytest>=3.5",
    "pytest-cov",
    "pytest-runner",
    "coverage[toml]",
    "nbformat",
    "nbconvert",
    # Code quality
    "black[colorama,jupyter]",
    "ruff",
    # Additional dependencies for development
    "openpyxl",
    "pandas",
    "pyexcel",
]

# Coverage configuration
[tool.coverage.run]
source = ["pystrata"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

# setuptools-scm configuration
[tool.setuptools_scm]
write_to = "src/pystrata/_version.py"
fallback_version = "0.5.5"

# setuptools configuration
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
pystrata = ["py.typed"]
